<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:tx="http://www.springframework.net/tx"
         xmlns:db="http://www.springframework.net/database">

  <object id="SQLite-1.0.80" type="Spring.Data.Common.DbProvider, Spring.Data" singleton="false">
    <constructor-arg name="dbMetaData">
      <object type="Spring.Data.Common.DbMetadata">
        <constructor-arg name="productName" value="SQLite"/>
        <constructor-arg name="assemblyName" value="System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="connectionType" value="System.Data.SQLite.SQLiteConnection, System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="commandType" value="System.Data.SQLite.SQLiteCommand, System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="parameterType" value="System.Data.SQLite.SQLiteParameter, System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="dataAdapterType" value="System.Data.SQLite.SQLiteDataAdapter , System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="commandBuilderType" value="System.Data.SQLite.SQLiteCommandBuilder, System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="commandBuilderDeriveParametersMethod" value="not supported"/>
        <constructor-arg name="parameterDbType" value="System.Data.SQLite.TypeAffinity, System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="parameterDbTypeProperty" value="DbType"/>
        <constructor-arg name="parameterIsNullableProperty" value="IsNullable"/>
        <constructor-arg name="parameterNamePrefix" value=":"/>
        <constructor-arg name="exceptionType" value="System.Data.SQLite.SQLiteException, System.Data.SQLite, Version=1.0.80.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139"/>
        <constructor-arg name="useParameterNamePrefixInParameterCollection" value="true"/>
        <constructor-arg name="useParameterPrefixInSql" value="true"/>
        <constructor-arg name="bindByName" value="true"/>
        <!-- this is only true for .net 1.1 kept it here just in case we want to revert back to this strategy for
             obtaining error codes-->
        <constructor-arg name="errorCodeExceptionExpression" value="ErrorCode.ToString('D')"/>
        
        <property name="ErrorCodes.badSqlGrammarCodes">
          <value></value>
        </property>
        <property name="ErrorCodes.DataAccessResourceFailureCodes">
          <value>1</value>
        </property>
        <property name="ErrorCodes.DataIntegrityViolationCodes">
          <value></value>
        </property>
        <property name="ErrorCodes.CannotAcquireLockCodes">
          <value>15</value>
        </property>
        <property name="ErrorCodes.DeadlockLoserCodes">
          <value>5,6</value>
        </property>
      </object>
    </constructor-arg>

    <property name="ConnectionString" value="Data Source=users.db;Version=3;Pooling=True;Max Pool Size=1;" />
  </object>

  <alias alias="DbProvider" name="SQLite-1.0.80"/>
  
  <!--<db:provider id="DbProvider" provider="SQLite-1.0.80"
                 connectionString="Data Source=users.db;Version=3;Pooling=True;Max Pool Size=1;" 
                depends-on=""/>  --><!-- :memory: -->

  <!-- Exception translation object post processor -->
  <!--<object type="Spring.Dao.Attributes.PersistenceExceptionTranslationPostProcessor, Spring.Data"/>-->

  <object id="SessionFactory"
          type="NHibernateMapByCode.ConformistLocalSessionFactoryObject, NHibernateMapByCode" >
    <property name="DbProvider" ref="DbProvider"/>
    <property name="ConformistMappingAssemblies" value="NHibernateMapByCode" />
    <property name="HibernateProperties">
      <dictionary>
        <entry key="connection.driver_class"
               value="NHibernate.Driver.SQLite20Driver"/>
        <entry key="hbm2ddl.auto" 
               value="update"/>
        <entry key="dialect"
               value="NHibernate.Dialect.SQLiteDialect"/>
        <entry key="query.substitutions"
               value="true=1;false=0"/>
        <entry key="show_sql"
               value="false"/>
        <entry key="hbm2ddl.keywords"
               value="auto-quote"/>
      </dictionary>
    </property>

    <!-- provides integration with Spring's declarative transaction management features -->
    <property name="ExposeTransactionAwareSessionFactory" value="true" />

  </object>

  <!-- Transaction Management Strategy -->
  <object id="transactionManager"
        type="Spring.Data.NHibernate.HibernateTransactionManager, Spring.Data.NHibernate32">
    <property name="DbProvider" ref="DbProvider"/>
    <property name="SessionFactory" ref="SessionFactory"/>
    <property name="TransactionSynchronization" value="Always"/>
  </object>

  <tx:attribute-driven transaction-manager="transactionManager"/>

</objects>